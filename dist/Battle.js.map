{"version":3,"sources":["../dist-esnext/Battle.js"],"names":["startBattle","fieldConfig","field","isOver","openNearPositions","battle","pos","last","map","clickPosition","p","openAllField","col","endBattle","position","x","y","opened","isBomb","openedPos","nearBombs","markPosition","marked"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA,IAAMA,cAAc,SAAdA,WAAc,CAACC,WAAD,EAAiB;AACjC,QAAMC,QAAQ,4BAAgBD,WAAhB,CAAd;AACA,WAAO,EAAEC,YAAF,EAASC,QAAQ,KAAjB,EAAP;AACH,CAHD;AAIA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,MAAD,EAASC,GAAT;AAAA,WAAiB,gBAAEC,IAAF,CAAO,0BAAcD,GAAd,EAAmBE,GAAnB,CAAuB;AAAA,eAAKC,cAAcJ,MAAd,EAAsBK,CAAtB,CAAL;AAAA,KAAvB,CAAP,CAAjB;AAAA,CAA1B;AACA,IAAMC,eAAe,SAAfA,YAAe,CAACT,KAAD;AAAA,WAAWA,MAAMM,GAAN,CAAU;AAAA,eAAOI,IAAIJ,GAAJ,CAAQ;AAAA,mBAAO,yBAAaF,GAAb,CAAP;AAAA,SAAR,CAAP;AAAA,KAAV,CAAX;AAAA,CAArB;AACA,SAASO,SAAT,CAAmBR,MAAnB,EAA2B;AACvBA,WAAOF,MAAP,GAAgB,IAAhB;AACAE,WAAOH,KAAP,GAAeS,aAAaN,OAAOH,KAApB,CAAf;AACA,WAAOG,MAAP;AACH;AACD,IAAMI,gBAAgB,SAAhBA,aAAgB,CAACJ,MAAD,EAASS,QAAT,EAAsB;AACxC,QAAI,CAAC,4BAAgBT,OAAOH,KAAvB,EAA8BY,QAA9B,CAAL,EACI,OAAOT,MAAP;AACJ,QAAMC,MAAMD,OAAOH,KAAP,CAAaY,SAASC,CAAtB,EAAyBD,SAASE,CAAlC,CAAZ;AACA,QAAIV,IAAIW,MAAR,EACI,OAAOZ,MAAP;AACJ,QAAIC,IAAIY,MAAR,EACI,OAAOL,UAAUR,MAAV,CAAP;AACJ,QAAMc,YAAY,yBAAab,GAAb,CAAlB;AACA,QAAIa,UAAUC,SAAV,KAAwB,CAA5B,EACI,OAAOhB,kBAAkBC,MAAlB,EAA0Bc,SAA1B,CAAP;AACJ,WAAOd,MAAP;AACH,CAZD;AAaA,IAAMgB,eAAe,SAAfA,YAAe,CAAChB,MAAD,EAASS,QAAT,EAAsB;AACvC,QAAI,CAAC,4BAAgBT,OAAOH,KAAvB,EAA8BY,QAA9B,CAAL,EACI,OAAOT,MAAP;AACJ,QAAMC,MAAMD,OAAOH,KAAP,CAAaY,SAASC,CAAtB,EAAyBD,SAASE,CAAlC,CAAZ;AACA,QAAIV,IAAIW,MAAR,EACI,OAAOZ,MAAP;AACJ,QAAIC,IAAIY,MAAR,EACI,OAAOL,UAAUR,MAAV,CAAP;AACJC,QAAIgB,MAAJ;AACA,WAAOjB,MAAP;AACH,CAVD;QAWSL,W,GAAAA,W;QAAaS,a,GAAAA,a;QAAeY,Y,GAAAA,Y;AACrC","file":"Battle.js","sourcesContent":["import R from 'ramda';\r\nimport { getInitialField, nearPositions, openPosition, positionIsValid } from './Field';\r\nconst startBattle = (fieldConfig) => {\r\n    const field = getInitialField(fieldConfig);\r\n    return { field, isOver: false };\r\n};\r\nconst openNearPositions = (battle, pos) => R.last(nearPositions(pos).map(p => clickPosition(battle, p)));\r\nconst openAllField = (field) => field.map(col => col.map(pos => openPosition(pos)));\r\nfunction endBattle(battle) {\r\n    battle.isOver = true;\r\n    battle.field = openAllField(battle.field);\r\n    return battle;\r\n}\r\nconst clickPosition = (battle, position) => {\r\n    if (!positionIsValid(battle.field, position))\r\n        return battle;\r\n    const pos = battle.field[position.x][position.y];\r\n    if (pos.opened)\r\n        return battle;\r\n    if (pos.isBomb)\r\n        return endBattle(battle);\r\n    const openedPos = openPosition(pos);\r\n    if (openedPos.nearBombs === 0)\r\n        return openNearPositions(battle, openedPos);\r\n    return battle;\r\n};\r\nconst markPosition = (battle, position) => {\r\n    if (!positionIsValid(battle.field, position))\r\n        return battle;\r\n    const pos = battle.field[position.x][position.y];\r\n    if (pos.opened)\r\n        return battle;\r\n    if (pos.isBomb)\r\n        return endBattle(battle);\r\n    pos.marked++;\r\n    return battle;\r\n};\r\nexport { startBattle, clickPosition, markPosition };\r\n//# sourceMappingURL=Battle.js.map"]}